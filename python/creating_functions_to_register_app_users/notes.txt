Problem Requirement
-Create function called validate_user()
    -takes 3 parameters, name, email and password
    -needs to call python_functions functions validate_name(), validate_email(), and validate_password()
    -Needs ValueError for functions that fail
    -Return true if all checks pass 
-Create function called register_user() when all checks are passed
    -takes three parameters, name, email and password 
    -calls validate_user to pass checks
    -returns false if validate_user raisers valueerror 
    -create and return dictionary with keys name, email, password if validate_user returns true


If the function I'm calling raises its own ValueError, I would use a try...except block to catch and handle it.
However, if the function does not raise errors and only returns True or False, then I need to use if...raise in my validate_user() function.
In that case, I have two options:
Raise a generic ValueError if any function returns False
Raise a specific ValueError by manually checking the same logic the function uses

    
The next Step of this project is to create a function that ran validate_user. Checking for validate error using try.. except. This is neccisary to check for validate error used in another function  





